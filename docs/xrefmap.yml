### YamlMime:XRefMap
sorted: true
references:
- uid: DiceLibrary.DiceRolling
  name: DiceLibrary.DiceRolling
  href: api/DiceLibrary.DiceRolling.html
  commentId: N:DiceLibrary.DiceRolling
  fullName: DiceLibrary.DiceRolling
  nameWithType: DiceLibrary.DiceRolling
- uid: DiceLibrary.DiceRolling.DiceRoller
  name: DiceRoller
  href: api/DiceLibrary.DiceRolling.DiceRoller.html
  commentId: T:DiceLibrary.DiceRolling.DiceRoller
  fullName: DiceLibrary.DiceRolling.DiceRoller
  nameWithType: DiceRoller
- uid: DiceLibrary.DiceRolling.DiceRoller.#ctor(DiceLibrary.Factory.IDiceFactory)
  name: DiceRoller(IDiceFactory)
  href: api/DiceLibrary.DiceRolling.DiceRoller.html#DiceLibrary_DiceRolling_DiceRoller__ctor_DiceLibrary_Factory_IDiceFactory_
  commentId: M:DiceLibrary.DiceRolling.DiceRoller.#ctor(DiceLibrary.Factory.IDiceFactory)
  name.vb: New(IDiceFactory)
  fullName: DiceLibrary.DiceRolling.DiceRoller.DiceRoller(DiceLibrary.Factory.IDiceFactory)
  fullName.vb: DiceLibrary.DiceRolling.DiceRoller.New(DiceLibrary.Factory.IDiceFactory)
  nameWithType: DiceRoller.DiceRoller(IDiceFactory)
  nameWithType.vb: DiceRoller.New(IDiceFactory)
- uid: DiceLibrary.DiceRolling.DiceRoller.#ctor*
  name: DiceRoller
  href: api/DiceLibrary.DiceRolling.DiceRoller.html#DiceLibrary_DiceRolling_DiceRoller__ctor_
  commentId: Overload:DiceLibrary.DiceRolling.DiceRoller.#ctor
  isSpec: "True"
  name.vb: New
  fullName: DiceLibrary.DiceRolling.DiceRoller.DiceRoller
  fullName.vb: DiceLibrary.DiceRolling.DiceRoller.New
  nameWithType: DiceRoller.DiceRoller
  nameWithType.vb: DiceRoller.New
- uid: DiceLibrary.DiceRolling.DiceRoller.RollDice(System.Int32,System.Int32)
  name: RollDice(int, int)
  href: api/DiceLibrary.DiceRolling.DiceRoller.html#DiceLibrary_DiceRolling_DiceRoller_RollDice_System_Int32_System_Int32_
  commentId: M:DiceLibrary.DiceRolling.DiceRoller.RollDice(System.Int32,System.Int32)
  name.vb: RollDice(Integer, Integer)
  fullName: DiceLibrary.DiceRolling.DiceRoller.RollDice(int, int)
  fullName.vb: DiceLibrary.DiceRolling.DiceRoller.RollDice(Integer, Integer)
  nameWithType: DiceRoller.RollDice(int, int)
  nameWithType.vb: DiceRoller.RollDice(Integer, Integer)
- uid: DiceLibrary.DiceRolling.DiceRoller.RollDice*
  name: RollDice
  href: api/DiceLibrary.DiceRolling.DiceRoller.html#DiceLibrary_DiceRolling_DiceRoller_RollDice_
  commentId: Overload:DiceLibrary.DiceRolling.DiceRoller.RollDice
  isSpec: "True"
  fullName: DiceLibrary.DiceRolling.DiceRoller.RollDice
  nameWithType: DiceRoller.RollDice
- uid: DiceLibrary.DiceRolling.IDiceRoller
  name: IDiceRoller
  href: api/DiceLibrary.DiceRolling.IDiceRoller.html
  commentId: T:DiceLibrary.DiceRolling.IDiceRoller
  fullName: DiceLibrary.DiceRolling.IDiceRoller
  nameWithType: IDiceRoller
- uid: DiceLibrary.DiceRolling.IDiceRoller.RollDice(System.Int32,System.Int32)
  name: RollDice(int, int)
  href: api/DiceLibrary.DiceRolling.IDiceRoller.html#DiceLibrary_DiceRolling_IDiceRoller_RollDice_System_Int32_System_Int32_
  commentId: M:DiceLibrary.DiceRolling.IDiceRoller.RollDice(System.Int32,System.Int32)
  name.vb: RollDice(Integer, Integer)
  fullName: DiceLibrary.DiceRolling.IDiceRoller.RollDice(int, int)
  fullName.vb: DiceLibrary.DiceRolling.IDiceRoller.RollDice(Integer, Integer)
  nameWithType: IDiceRoller.RollDice(int, int)
  nameWithType.vb: IDiceRoller.RollDice(Integer, Integer)
- uid: DiceLibrary.DiceRolling.IDiceRoller.RollDice*
  name: RollDice
  href: api/DiceLibrary.DiceRolling.IDiceRoller.html#DiceLibrary_DiceRolling_IDiceRoller_RollDice_
  commentId: Overload:DiceLibrary.DiceRolling.IDiceRoller.RollDice
  isSpec: "True"
  fullName: DiceLibrary.DiceRolling.IDiceRoller.RollDice
  nameWithType: IDiceRoller.RollDice
- uid: DiceLibrary.Factory
  name: DiceLibrary.Factory
  href: api/DiceLibrary.Factory.html
  commentId: N:DiceLibrary.Factory
  fullName: DiceLibrary.Factory
  nameWithType: DiceLibrary.Factory
- uid: DiceLibrary.Factory.DiceFactory
  name: DiceFactory
  href: api/DiceLibrary.Factory.DiceFactory.html
  commentId: T:DiceLibrary.Factory.DiceFactory
  fullName: DiceLibrary.Factory.DiceFactory
  nameWithType: DiceFactory
- uid: DiceLibrary.Factory.DiceFactory.#ctor(System.Int32)
  name: DiceFactory(int)
  href: api/DiceLibrary.Factory.DiceFactory.html#DiceLibrary_Factory_DiceFactory__ctor_System_Int32_
  commentId: M:DiceLibrary.Factory.DiceFactory.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: DiceLibrary.Factory.DiceFactory.DiceFactory(int)
  fullName.vb: DiceLibrary.Factory.DiceFactory.New(Integer)
  nameWithType: DiceFactory.DiceFactory(int)
  nameWithType.vb: DiceFactory.New(Integer)
- uid: DiceLibrary.Factory.DiceFactory.#ctor*
  name: DiceFactory
  href: api/DiceLibrary.Factory.DiceFactory.html#DiceLibrary_Factory_DiceFactory__ctor_
  commentId: Overload:DiceLibrary.Factory.DiceFactory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: DiceLibrary.Factory.DiceFactory.DiceFactory
  fullName.vb: DiceLibrary.Factory.DiceFactory.New
  nameWithType: DiceFactory.DiceFactory
  nameWithType.vb: DiceFactory.New
- uid: DiceLibrary.Factory.DiceFactory.Create
  name: Create()
  href: api/DiceLibrary.Factory.DiceFactory.html#DiceLibrary_Factory_DiceFactory_Create
  commentId: M:DiceLibrary.Factory.DiceFactory.Create
  fullName: DiceLibrary.Factory.DiceFactory.Create()
  nameWithType: DiceFactory.Create()
- uid: DiceLibrary.Factory.DiceFactory.Create(System.Int32)
  name: Create(int)
  href: api/DiceLibrary.Factory.DiceFactory.html#DiceLibrary_Factory_DiceFactory_Create_System_Int32_
  commentId: M:DiceLibrary.Factory.DiceFactory.Create(System.Int32)
  name.vb: Create(Integer)
  fullName: DiceLibrary.Factory.DiceFactory.Create(int)
  fullName.vb: DiceLibrary.Factory.DiceFactory.Create(Integer)
  nameWithType: DiceFactory.Create(int)
  nameWithType.vb: DiceFactory.Create(Integer)
- uid: DiceLibrary.Factory.DiceFactory.Create*
  name: Create
  href: api/DiceLibrary.Factory.DiceFactory.html#DiceLibrary_Factory_DiceFactory_Create_
  commentId: Overload:DiceLibrary.Factory.DiceFactory.Create
  isSpec: "True"
  fullName: DiceLibrary.Factory.DiceFactory.Create
  nameWithType: DiceFactory.Create
- uid: DiceLibrary.Factory.IDiceFactory
  name: IDiceFactory
  href: api/DiceLibrary.Factory.IDiceFactory.html
  commentId: T:DiceLibrary.Factory.IDiceFactory
  fullName: DiceLibrary.Factory.IDiceFactory
  nameWithType: IDiceFactory
- uid: DiceLibrary.Factory.IDiceFactory.Create
  name: Create()
  href: api/DiceLibrary.Factory.IDiceFactory.html#DiceLibrary_Factory_IDiceFactory_Create
  commentId: M:DiceLibrary.Factory.IDiceFactory.Create
  fullName: DiceLibrary.Factory.IDiceFactory.Create()
  nameWithType: IDiceFactory.Create()
- uid: DiceLibrary.Factory.IDiceFactory.Create(System.Int32)
  name: Create(int)
  href: api/DiceLibrary.Factory.IDiceFactory.html#DiceLibrary_Factory_IDiceFactory_Create_System_Int32_
  commentId: M:DiceLibrary.Factory.IDiceFactory.Create(System.Int32)
  name.vb: Create(Integer)
  fullName: DiceLibrary.Factory.IDiceFactory.Create(int)
  fullName.vb: DiceLibrary.Factory.IDiceFactory.Create(Integer)
  nameWithType: IDiceFactory.Create(int)
  nameWithType.vb: IDiceFactory.Create(Integer)
- uid: DiceLibrary.Factory.IDiceFactory.Create*
  name: Create
  href: api/DiceLibrary.Factory.IDiceFactory.html#DiceLibrary_Factory_IDiceFactory_Create_
  commentId: Overload:DiceLibrary.Factory.IDiceFactory.Create
  isSpec: "True"
  fullName: DiceLibrary.Factory.IDiceFactory.Create
  nameWithType: IDiceFactory.Create
- uid: DiceLibrary.Model
  name: DiceLibrary.Model
  href: api/DiceLibrary.Model.html
  commentId: N:DiceLibrary.Model
  fullName: DiceLibrary.Model
  nameWithType: DiceLibrary.Model
- uid: DiceLibrary.Model.Dice
  name: Dice
  href: api/DiceLibrary.Model.Dice.html
  commentId: T:DiceLibrary.Model.Dice
  fullName: DiceLibrary.Model.Dice
  nameWithType: Dice
- uid: DiceLibrary.Model.Dice.#ctor(System.Int32)
  name: Dice(int)
  href: api/DiceLibrary.Model.Dice.html#DiceLibrary_Model_Dice__ctor_System_Int32_
  commentId: M:DiceLibrary.Model.Dice.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: DiceLibrary.Model.Dice.Dice(int)
  fullName.vb: DiceLibrary.Model.Dice.New(Integer)
  nameWithType: Dice.Dice(int)
  nameWithType.vb: Dice.New(Integer)
- uid: DiceLibrary.Model.Dice.#ctor*
  name: Dice
  href: api/DiceLibrary.Model.Dice.html#DiceLibrary_Model_Dice__ctor_
  commentId: Overload:DiceLibrary.Model.Dice.#ctor
  isSpec: "True"
  name.vb: New
  fullName: DiceLibrary.Model.Dice.Dice
  fullName.vb: DiceLibrary.Model.Dice.New
  nameWithType: Dice.Dice
  nameWithType.vb: Dice.New
- uid: DiceLibrary.Model.Dice.Roll
  name: Roll()
  href: api/DiceLibrary.Model.Dice.html#DiceLibrary_Model_Dice_Roll
  commentId: M:DiceLibrary.Model.Dice.Roll
  fullName: DiceLibrary.Model.Dice.Roll()
  nameWithType: Dice.Roll()
- uid: DiceLibrary.Model.Dice.Roll*
  name: Roll
  href: api/DiceLibrary.Model.Dice.html#DiceLibrary_Model_Dice_Roll_
  commentId: Overload:DiceLibrary.Model.Dice.Roll
  isSpec: "True"
  fullName: DiceLibrary.Model.Dice.Roll
  nameWithType: Dice.Roll
- uid: DiceLibrary.Model.Dice.Sides
  name: Sides
  href: api/DiceLibrary.Model.Dice.html#DiceLibrary_Model_Dice_Sides
  commentId: P:DiceLibrary.Model.Dice.Sides
  fullName: DiceLibrary.Model.Dice.Sides
  nameWithType: Dice.Sides
- uid: DiceLibrary.Model.Dice.Sides*
  name: Sides
  href: api/DiceLibrary.Model.Dice.html#DiceLibrary_Model_Dice_Sides_
  commentId: Overload:DiceLibrary.Model.Dice.Sides
  isSpec: "True"
  fullName: DiceLibrary.Model.Dice.Sides
  nameWithType: Dice.Sides
- uid: DiceLibrary.Model.IDice
  name: IDice
  href: api/DiceLibrary.Model.IDice.html
  commentId: T:DiceLibrary.Model.IDice
  fullName: DiceLibrary.Model.IDice
  nameWithType: IDice
- uid: DiceLibrary.Model.IDice.Roll
  name: Roll()
  href: api/DiceLibrary.Model.IDice.html#DiceLibrary_Model_IDice_Roll
  commentId: M:DiceLibrary.Model.IDice.Roll
  fullName: DiceLibrary.Model.IDice.Roll()
  nameWithType: IDice.Roll()
- uid: DiceLibrary.Model.IDice.Roll*
  name: Roll
  href: api/DiceLibrary.Model.IDice.html#DiceLibrary_Model_IDice_Roll_
  commentId: Overload:DiceLibrary.Model.IDice.Roll
  isSpec: "True"
  fullName: DiceLibrary.Model.IDice.Roll
  nameWithType: IDice.Roll
- uid: DiceLibrary.Model.IDice.Sides
  name: Sides
  href: api/DiceLibrary.Model.IDice.html#DiceLibrary_Model_IDice_Sides
  commentId: P:DiceLibrary.Model.IDice.Sides
  fullName: DiceLibrary.Model.IDice.Sides
  nameWithType: IDice.Sides
- uid: DiceLibrary.Model.IDice.Sides*
  name: Sides
  href: api/DiceLibrary.Model.IDice.html#DiceLibrary_Model_IDice_Sides_
  commentId: Overload:DiceLibrary.Model.IDice.Sides
  isSpec: "True"
  fullName: DiceLibrary.Model.IDice.Sides
  nameWithType: IDice.Sides
- uid: Roll
  name: Roll
  href: api/Roll.html
  commentId: N:Roll
  fullName: Roll
  nameWithType: Roll
- uid: Roll.InputValidation
  name: Roll.InputValidation
  href: api/Roll.InputValidation.html
  commentId: N:Roll.InputValidation
  fullName: Roll.InputValidation
  nameWithType: Roll.InputValidation
- uid: Roll.InputValidation.IInputValidator
  name: IInputValidator
  href: api/Roll.InputValidation.IInputValidator.html
  commentId: T:Roll.InputValidation.IInputValidator
  fullName: Roll.InputValidation.IInputValidator
  nameWithType: IInputValidator
- uid: Roll.InputValidation.IInputValidator.ParseInput(System.String[])
  name: ParseInput(string[])
  href: api/Roll.InputValidation.IInputValidator.html#Roll_InputValidation_IInputValidator_ParseInput_System_String___
  commentId: M:Roll.InputValidation.IInputValidator.ParseInput(System.String[])
  name.vb: ParseInput(String())
  fullName: Roll.InputValidation.IInputValidator.ParseInput(string[])
  fullName.vb: Roll.InputValidation.IInputValidator.ParseInput(String())
  nameWithType: IInputValidator.ParseInput(string[])
  nameWithType.vb: IInputValidator.ParseInput(String())
- uid: Roll.InputValidation.IInputValidator.ParseInput*
  name: ParseInput
  href: api/Roll.InputValidation.IInputValidator.html#Roll_InputValidation_IInputValidator_ParseInput_
  commentId: Overload:Roll.InputValidation.IInputValidator.ParseInput
  isSpec: "True"
  fullName: Roll.InputValidation.IInputValidator.ParseInput
  nameWithType: IInputValidator.ParseInput
- uid: Roll.InputValidation.InputValidator
  name: InputValidator
  href: api/Roll.InputValidation.InputValidator.html
  commentId: T:Roll.InputValidation.InputValidator
  fullName: Roll.InputValidation.InputValidator
  nameWithType: InputValidator
- uid: Roll.InputValidation.InputValidator.ParseInput(System.String[])
  name: ParseInput(string[])
  href: api/Roll.InputValidation.InputValidator.html#Roll_InputValidation_InputValidator_ParseInput_System_String___
  commentId: M:Roll.InputValidation.InputValidator.ParseInput(System.String[])
  name.vb: ParseInput(String())
  fullName: Roll.InputValidation.InputValidator.ParseInput(string[])
  fullName.vb: Roll.InputValidation.InputValidator.ParseInput(String())
  nameWithType: InputValidator.ParseInput(string[])
  nameWithType.vb: InputValidator.ParseInput(String())
- uid: Roll.InputValidation.InputValidator.ParseInput*
  name: ParseInput
  href: api/Roll.InputValidation.InputValidator.html#Roll_InputValidation_InputValidator_ParseInput_
  commentId: Overload:Roll.InputValidation.InputValidator.ParseInput
  isSpec: "True"
  fullName: Roll.InputValidation.InputValidator.ParseInput
  nameWithType: InputValidator.ParseInput
- uid: Roll.OutputPrinting
  name: Roll.OutputPrinting
  href: api/Roll.OutputPrinting.html
  commentId: N:Roll.OutputPrinting
  fullName: Roll.OutputPrinting
  nameWithType: Roll.OutputPrinting
- uid: Roll.OutputPrinting.IOutputPrinter
  name: IOutputPrinter
  href: api/Roll.OutputPrinting.IOutputPrinter.html
  commentId: T:Roll.OutputPrinting.IOutputPrinter
  fullName: Roll.OutputPrinting.IOutputPrinter
  nameWithType: IOutputPrinter
- uid: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException(System.ArgumentException)
  name: PrintArgumentException(ArgumentException)
  href: api/Roll.OutputPrinting.IOutputPrinter.html#Roll_OutputPrinting_IOutputPrinter_PrintArgumentException_System_ArgumentException_
  commentId: M:Roll.OutputPrinting.IOutputPrinter.PrintArgumentException(System.ArgumentException)
  fullName: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException(System.ArgumentException)
  nameWithType: IOutputPrinter.PrintArgumentException(ArgumentException)
- uid: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException*
  name: PrintArgumentException
  href: api/Roll.OutputPrinting.IOutputPrinter.html#Roll_OutputPrinting_IOutputPrinter_PrintArgumentException_
  commentId: Overload:Roll.OutputPrinting.IOutputPrinter.PrintArgumentException
  isSpec: "True"
  fullName: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException
  nameWithType: IOutputPrinter.PrintArgumentException
- uid: Roll.OutputPrinting.IOutputPrinter.PrintResults(System.Int32[],System.Int32)
  name: PrintResults(int[], int)
  href: api/Roll.OutputPrinting.IOutputPrinter.html#Roll_OutputPrinting_IOutputPrinter_PrintResults_System_Int32___System_Int32_
  commentId: M:Roll.OutputPrinting.IOutputPrinter.PrintResults(System.Int32[],System.Int32)
  name.vb: PrintResults(Integer(), Integer)
  fullName: Roll.OutputPrinting.IOutputPrinter.PrintResults(int[], int)
  fullName.vb: Roll.OutputPrinting.IOutputPrinter.PrintResults(Integer(), Integer)
  nameWithType: IOutputPrinter.PrintResults(int[], int)
  nameWithType.vb: IOutputPrinter.PrintResults(Integer(), Integer)
- uid: Roll.OutputPrinting.IOutputPrinter.PrintResults*
  name: PrintResults
  href: api/Roll.OutputPrinting.IOutputPrinter.html#Roll_OutputPrinting_IOutputPrinter_PrintResults_
  commentId: Overload:Roll.OutputPrinting.IOutputPrinter.PrintResults
  isSpec: "True"
  fullName: Roll.OutputPrinting.IOutputPrinter.PrintResults
  nameWithType: IOutputPrinter.PrintResults
- uid: Roll.OutputPrinting.OutputPrinter
  name: OutputPrinter
  href: api/Roll.OutputPrinting.OutputPrinter.html
  commentId: T:Roll.OutputPrinting.OutputPrinter
  fullName: Roll.OutputPrinting.OutputPrinter
  nameWithType: OutputPrinter
- uid: Roll.OutputPrinting.OutputPrinter.PrintArgumentException(System.ArgumentException)
  name: PrintArgumentException(ArgumentException)
  href: api/Roll.OutputPrinting.OutputPrinter.html#Roll_OutputPrinting_OutputPrinter_PrintArgumentException_System_ArgumentException_
  commentId: M:Roll.OutputPrinting.OutputPrinter.PrintArgumentException(System.ArgumentException)
  fullName: Roll.OutputPrinting.OutputPrinter.PrintArgumentException(System.ArgumentException)
  nameWithType: OutputPrinter.PrintArgumentException(ArgumentException)
- uid: Roll.OutputPrinting.OutputPrinter.PrintArgumentException*
  name: PrintArgumentException
  href: api/Roll.OutputPrinting.OutputPrinter.html#Roll_OutputPrinting_OutputPrinter_PrintArgumentException_
  commentId: Overload:Roll.OutputPrinting.OutputPrinter.PrintArgumentException
  isSpec: "True"
  fullName: Roll.OutputPrinting.OutputPrinter.PrintArgumentException
  nameWithType: OutputPrinter.PrintArgumentException
- uid: Roll.OutputPrinting.OutputPrinter.PrintResults(System.Int32[],System.Int32)
  name: PrintResults(int[], int)
  href: api/Roll.OutputPrinting.OutputPrinter.html#Roll_OutputPrinting_OutputPrinter_PrintResults_System_Int32___System_Int32_
  commentId: M:Roll.OutputPrinting.OutputPrinter.PrintResults(System.Int32[],System.Int32)
  name.vb: PrintResults(Integer(), Integer)
  fullName: Roll.OutputPrinting.OutputPrinter.PrintResults(int[], int)
  fullName.vb: Roll.OutputPrinting.OutputPrinter.PrintResults(Integer(), Integer)
  nameWithType: OutputPrinter.PrintResults(int[], int)
  nameWithType.vb: OutputPrinter.PrintResults(Integer(), Integer)
- uid: Roll.OutputPrinting.OutputPrinter.PrintResults*
  name: PrintResults
  href: api/Roll.OutputPrinting.OutputPrinter.html#Roll_OutputPrinting_OutputPrinter_PrintResults_
  commentId: Overload:Roll.OutputPrinting.OutputPrinter.PrintResults
  isSpec: "True"
  fullName: Roll.OutputPrinting.OutputPrinter.PrintResults
  nameWithType: OutputPrinter.PrintResults
- uid: Roll.Program
  name: Program
  href: api/Roll.Program.html
  commentId: T:Roll.Program
  fullName: Roll.Program
  nameWithType: Program
- uid: Roll.Program.#ctor(Roll.InputValidation.IInputValidator,DiceLibrary.DiceRolling.IDiceRoller,Roll.OutputPrinting.IOutputPrinter)
  name: Program(IInputValidator, IDiceRoller, IOutputPrinter)
  href: api/Roll.Program.html#Roll_Program__ctor_Roll_InputValidation_IInputValidator_DiceLibrary_DiceRolling_IDiceRoller_Roll_OutputPrinting_IOutputPrinter_
  commentId: M:Roll.Program.#ctor(Roll.InputValidation.IInputValidator,DiceLibrary.DiceRolling.IDiceRoller,Roll.OutputPrinting.IOutputPrinter)
  name.vb: New(IInputValidator, IDiceRoller, IOutputPrinter)
  fullName: Roll.Program.Program(Roll.InputValidation.IInputValidator, DiceLibrary.DiceRolling.IDiceRoller, Roll.OutputPrinting.IOutputPrinter)
  fullName.vb: Roll.Program.New(Roll.InputValidation.IInputValidator, DiceLibrary.DiceRolling.IDiceRoller, Roll.OutputPrinting.IOutputPrinter)
  nameWithType: Program.Program(IInputValidator, IDiceRoller, IOutputPrinter)
  nameWithType.vb: Program.New(IInputValidator, IDiceRoller, IOutputPrinter)
- uid: Roll.Program.#ctor*
  name: Program
  href: api/Roll.Program.html#Roll_Program__ctor_
  commentId: Overload:Roll.Program.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Roll.Program.Program
  fullName.vb: Roll.Program.New
  nameWithType: Program.Program
  nameWithType.vb: Program.New
- uid: Roll.Program.Main(System.String[])
  name: Main(string[])
  href: api/Roll.Program.html#Roll_Program_Main_System_String___
  commentId: M:Roll.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: Roll.Program.Main(string[])
  fullName.vb: Roll.Program.Main(String())
  nameWithType: Program.Main(string[])
  nameWithType.vb: Program.Main(String())
- uid: Roll.Program.Main*
  name: Main
  href: api/Roll.Program.html#Roll_Program_Main_
  commentId: Overload:Roll.Program.Main
  isSpec: "True"
  fullName: Roll.Program.Main
  nameWithType: Program.Main
- uid: Roll.Program.Run(System.String[])
  name: Run(string[])
  href: api/Roll.Program.html#Roll_Program_Run_System_String___
  commentId: M:Roll.Program.Run(System.String[])
  name.vb: Run(String())
  fullName: Roll.Program.Run(string[])
  fullName.vb: Roll.Program.Run(String())
  nameWithType: Program.Run(string[])
  nameWithType.vb: Program.Run(String())
- uid: Roll.Program.Run*
  name: Run
  href: api/Roll.Program.html#Roll_Program_Run_
  commentId: Overload:Roll.Program.Run
  isSpec: "True"
  fullName: Roll.Program.Run
  nameWithType: Program.Run
