### YamlMime:ManagedReference
items:
- uid: Roll.Program
  commentId: T:Roll.Program
  id: Program
  parent: Roll
  children:
  - Roll.Program.#ctor(Roll.InputValidation.IInputValidator,DiceLibrary.DiceRolling.IDiceRoller,Roll.OutputPrinting.IOutputPrinter)
  - Roll.Program.Main(System.String[])
  - Roll.Program.Run(System.String[])
  langs:
  - csharp
  - vb
  name: Program
  nameWithType: Program
  fullName: Roll.Program
  type: Class
  source:
    remote:
      path: src/Roll/Program.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: Program
    path: ../src/Roll/Program.cs
    startLine: 25
  assemblies:
  - Roll
  namespace: Roll
  summary: "\nRepresents the main entry point for the application.\n"
  example: []
  syntax:
    content: public class Program
    content.vb: Public Class Program
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Roll.Program.#ctor(Roll.InputValidation.IInputValidator,DiceLibrary.DiceRolling.IDiceRoller,Roll.OutputPrinting.IOutputPrinter)
  commentId: M:Roll.Program.#ctor(Roll.InputValidation.IInputValidator,DiceLibrary.DiceRolling.IDiceRoller,Roll.OutputPrinting.IOutputPrinter)
  id: '#ctor(Roll.InputValidation.IInputValidator,DiceLibrary.DiceRolling.IDiceRoller,Roll.OutputPrinting.IOutputPrinter)'
  parent: Roll.Program
  langs:
  - csharp
  - vb
  name: Program(IInputValidator, IDiceRoller, IOutputPrinter)
  nameWithType: Program.Program(IInputValidator, IDiceRoller, IOutputPrinter)
  fullName: Roll.Program.Program(Roll.InputValidation.IInputValidator, DiceLibrary.DiceRolling.IDiceRoller, Roll.OutputPrinting.IOutputPrinter)
  type: Constructor
  source:
    remote:
      path: src/Roll/Program.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: .ctor
    path: ../src/Roll/Program.cs
    startLine: 37
  assemblies:
  - Roll
  namespace: Roll
  summary: "\nInitializes a new instance of the <xref href=\"Roll.Program\" data-throw-if-not-resolved=\"false\"></xref> class with the specified dependencies.\n"
  example: []
  syntax:
    content: public Program(IInputValidator inputValidator, IDiceRoller diceRoller, IOutputPrinter outputPrinter)
    parameters:
    - id: inputValidator
      type: Roll.InputValidation.IInputValidator
      description: The input validator.
    - id: diceRoller
      type: DiceLibrary.DiceRolling.IDiceRoller
      description: The dice roller.
    - id: outputPrinter
      type: Roll.OutputPrinting.IOutputPrinter
      description: The output printer.
    content.vb: Public Sub New(inputValidator As IInputValidator, diceRoller As IDiceRoller, outputPrinter As IOutputPrinter)
  overload: Roll.Program.#ctor*
  nameWithType.vb: Program.New(IInputValidator, IDiceRoller, IOutputPrinter)
  fullName.vb: Roll.Program.New(Roll.InputValidation.IInputValidator, DiceLibrary.DiceRolling.IDiceRoller, Roll.OutputPrinting.IOutputPrinter)
  name.vb: New(IInputValidator, IDiceRoller, IOutputPrinter)
- uid: Roll.Program.Run(System.String[])
  commentId: M:Roll.Program.Run(System.String[])
  id: Run(System.String[])
  parent: Roll.Program
  langs:
  - csharp
  - vb
  name: Run(string[])
  nameWithType: Program.Run(string[])
  fullName: Roll.Program.Run(string[])
  type: Method
  source:
    remote:
      path: src/Roll/Program.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: Run
    path: ../src/Roll/Program.cs
    startLine: 48
  assemblies:
  - Roll
  namespace: Roll
  summary: "\nRuns the application with the specified command-line arguments.\n"
  example: []
  syntax:
    content: public void Run(string[] args)
    parameters:
    - id: args
      type: System.String[]
      description: The command-line arguments.
    content.vb: Public Sub Run(args As String())
  overload: Roll.Program.Run*
  nameWithType.vb: Program.Run(String())
  fullName.vb: Roll.Program.Run(String())
  name.vb: Run(String())
- uid: Roll.Program.Main(System.String[])
  commentId: M:Roll.Program.Main(System.String[])
  id: Main(System.String[])
  parent: Roll.Program
  langs:
  - csharp
  - vb
  name: Main(string[])
  nameWithType: Program.Main(string[])
  fullName: Roll.Program.Main(string[])
  type: Method
  source:
    remote:
      path: src/Roll/Program.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: Main
    path: ../src/Roll/Program.cs
    startLine: 65
  assemblies:
  - Roll
  namespace: Roll
  summary: "\nThe main entry point for the application.\n"
  example: []
  syntax:
    content: public static void Main(string[] args)
    parameters:
    - id: args
      type: System.String[]
      description: The command-line arguments.
    content.vb: Public Shared Sub Main(args As String())
  overload: Roll.Program.Main*
  nameWithType.vb: Program.Main(String())
  fullName.vb: Roll.Program.Main(String())
  name.vb: Main(String())
references:
- uid: Roll
  commentId: N:Roll
  name: Roll
  nameWithType: Roll
  fullName: Roll
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Roll.Program
  commentId: T:Roll.Program
  name: Program
  nameWithType: Program
  fullName: Roll.Program
- uid: Roll.Program.#ctor*
  commentId: Overload:Roll.Program.#ctor
  name: Program
  nameWithType: Program.Program
  fullName: Roll.Program.Program
  nameWithType.vb: Program.New
  fullName.vb: Roll.Program.New
  name.vb: New
- uid: Roll.InputValidation.IInputValidator
  commentId: T:Roll.InputValidation.IInputValidator
  parent: Roll.InputValidation
  name: IInputValidator
  nameWithType: IInputValidator
  fullName: Roll.InputValidation.IInputValidator
- uid: DiceLibrary.DiceRolling.IDiceRoller
  commentId: T:DiceLibrary.DiceRolling.IDiceRoller
  parent: DiceLibrary.DiceRolling
  name: IDiceRoller
  nameWithType: IDiceRoller
  fullName: DiceLibrary.DiceRolling.IDiceRoller
- uid: Roll.OutputPrinting.IOutputPrinter
  commentId: T:Roll.OutputPrinting.IOutputPrinter
  parent: Roll.OutputPrinting
  name: IOutputPrinter
  nameWithType: IOutputPrinter
  fullName: Roll.OutputPrinting.IOutputPrinter
- uid: Roll.InputValidation
  commentId: N:Roll.InputValidation
  name: Roll.InputValidation
  nameWithType: Roll.InputValidation
  fullName: Roll.InputValidation
  spec.csharp:
  - uid: Roll
    name: Roll
  - name: .
  - uid: Roll.InputValidation
    name: InputValidation
  spec.vb:
  - uid: Roll
    name: Roll
  - name: .
  - uid: Roll.InputValidation
    name: InputValidation
- uid: DiceLibrary.DiceRolling
  commentId: N:DiceLibrary.DiceRolling
  name: DiceLibrary.DiceRolling
  nameWithType: DiceLibrary.DiceRolling
  fullName: DiceLibrary.DiceRolling
  spec.csharp:
  - uid: DiceLibrary
    name: DiceLibrary
  - name: .
  - uid: DiceLibrary.DiceRolling
    name: DiceRolling
  spec.vb:
  - uid: DiceLibrary
    name: DiceLibrary
  - name: .
  - uid: DiceLibrary.DiceRolling
    name: DiceRolling
- uid: Roll.OutputPrinting
  commentId: N:Roll.OutputPrinting
  name: Roll.OutputPrinting
  nameWithType: Roll.OutputPrinting
  fullName: Roll.OutputPrinting
  spec.csharp:
  - uid: Roll
    name: Roll
  - name: .
  - uid: Roll.OutputPrinting
    name: OutputPrinting
  spec.vb:
  - uid: Roll
    name: Roll
  - name: .
  - uid: Roll.OutputPrinting
    name: OutputPrinting
- uid: Roll.Program.Run*
  commentId: Overload:Roll.Program.Run
  name: Run
  nameWithType: Program.Run
  fullName: Roll.Program.Run
- uid: System.String[]
  isExternal: true
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
- uid: Roll.Program.Main*
  commentId: Overload:Roll.Program.Main
  name: Main
  nameWithType: Program.Main
  fullName: Roll.Program.Main
