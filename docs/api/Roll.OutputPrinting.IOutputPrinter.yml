### YamlMime:ManagedReference
items:
- uid: Roll.OutputPrinting.IOutputPrinter
  commentId: T:Roll.OutputPrinting.IOutputPrinter
  id: IOutputPrinter
  parent: Roll.OutputPrinting
  children:
  - Roll.OutputPrinting.IOutputPrinter.PrintArgumentException(System.ArgumentException)
  - Roll.OutputPrinting.IOutputPrinter.PrintResults(System.Int32[],System.Int32)
  langs:
  - csharp
  - vb
  name: IOutputPrinter
  nameWithType: IOutputPrinter
  fullName: Roll.OutputPrinting.IOutputPrinter
  type: Interface
  source:
    remote:
      path: src/Roll/OutputPrinting/IOutputPrinter.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: IOutputPrinter
    path: ../src/Roll/OutputPrinting/IOutputPrinter.cs
    startLine: 19
  assemblies:
  - Roll
  namespace: Roll.OutputPrinting
  summary: "\nRepresents an object that can print the results of a dice roll to the console.\n"
  example: []
  syntax:
    content: public interface IOutputPrinter
    content.vb: Public Interface IOutputPrinter
- uid: Roll.OutputPrinting.IOutputPrinter.PrintResults(System.Int32[],System.Int32)
  commentId: M:Roll.OutputPrinting.IOutputPrinter.PrintResults(System.Int32[],System.Int32)
  id: PrintResults(System.Int32[],System.Int32)
  parent: Roll.OutputPrinting.IOutputPrinter
  langs:
  - csharp
  - vb
  name: PrintResults(int[], int)
  nameWithType: IOutputPrinter.PrintResults(int[], int)
  fullName: Roll.OutputPrinting.IOutputPrinter.PrintResults(int[], int)
  type: Method
  source:
    remote:
      path: src/Roll/OutputPrinting/IOutputPrinter.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: PrintResults
    path: ../src/Roll/OutputPrinting/IOutputPrinter.cs
    startLine: 29
  assemblies:
  - Roll
  namespace: Roll.OutputPrinting
  summary: "\nPrints the results of a dice roll to the console.\n"
  example: []
  syntax:
    content: void PrintResults(int[] results, int sides)
    parameters:
    - id: results
      type: System.Int32[]
      description: The results of the dice roll.
    - id: sides
      type: System.Int32
      description: The number of sides on the dice that were rolled.
    content.vb: Sub PrintResults(results As Integer(), sides As Integer)
  overload: Roll.OutputPrinting.IOutputPrinter.PrintResults*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">results</code> array is null or empty.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">sides</code> value is 0.
  nameWithType.vb: IOutputPrinter.PrintResults(Integer(), Integer)
  fullName.vb: Roll.OutputPrinting.IOutputPrinter.PrintResults(Integer(), Integer)
  name.vb: PrintResults(Integer(), Integer)
- uid: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException(System.ArgumentException)
  commentId: M:Roll.OutputPrinting.IOutputPrinter.PrintArgumentException(System.ArgumentException)
  id: PrintArgumentException(System.ArgumentException)
  parent: Roll.OutputPrinting.IOutputPrinter
  langs:
  - csharp
  - vb
  name: PrintArgumentException(ArgumentException)
  nameWithType: IOutputPrinter.PrintArgumentException(ArgumentException)
  fullName: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException(System.ArgumentException)
  type: Method
  source:
    remote:
      path: src/Roll/OutputPrinting/IOutputPrinter.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: PrintArgumentException
    path: ../src/Roll/OutputPrinting/IOutputPrinter.cs
    startLine: 35
  assemblies:
  - Roll
  namespace: Roll.OutputPrinting
  summary: "\nPrints an argument exception message to the console.\n"
  example: []
  syntax:
    content: void PrintArgumentException(ArgumentException argumentException)
    parameters:
    - id: argumentException
      type: System.ArgumentException
      description: The argument exception to print.
    content.vb: Sub PrintArgumentException(argumentException As ArgumentException)
  overload: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException*
references:
- uid: Roll.OutputPrinting
  commentId: N:Roll.OutputPrinting
  name: Roll.OutputPrinting
  nameWithType: Roll.OutputPrinting
  fullName: Roll.OutputPrinting
  spec.csharp:
  - uid: Roll
    name: Roll
  - name: .
  - uid: Roll.OutputPrinting
    name: OutputPrinting
  spec.vb:
  - uid: Roll
    name: Roll
  - name: .
  - uid: Roll.OutputPrinting
    name: OutputPrinting
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Roll.OutputPrinting.IOutputPrinter.PrintResults*
  commentId: Overload:Roll.OutputPrinting.IOutputPrinter.PrintResults
  name: PrintResults
  nameWithType: IOutputPrinter.PrintResults
  fullName: Roll.OutputPrinting.IOutputPrinter.PrintResults
- uid: System.Int32[]
  isExternal: true
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException*
  commentId: Overload:Roll.OutputPrinting.IOutputPrinter.PrintArgumentException
  name: PrintArgumentException
  nameWithType: IOutputPrinter.PrintArgumentException
  fullName: Roll.OutputPrinting.IOutputPrinter.PrintArgumentException
