### YamlMime:ManagedReference
items:
- uid: DiceLibrary.DiceRolling.IDiceRoller
  commentId: T:DiceLibrary.DiceRolling.IDiceRoller
  id: IDiceRoller
  parent: DiceLibrary.DiceRolling
  children:
  - DiceLibrary.DiceRolling.IDiceRoller.RollDice(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IDiceRoller
  nameWithType: IDiceRoller
  fullName: DiceLibrary.DiceRolling.IDiceRoller
  type: Interface
  source:
    remote:
      path: src/DiceLibrary/DiceRolling/IDiceRoller.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: IDiceRoller
    path: ../src/DiceLibrary/DiceRolling/IDiceRoller.cs
    startLine: 19
  assemblies:
  - DiceLibrary
  namespace: DiceLibrary.DiceRolling
  summary: "\nRepresents an object that can roll a specified number of dice with a specified number of sides.\n"
  example: []
  syntax:
    content: public interface IDiceRoller
    content.vb: Public Interface IDiceRoller
- uid: DiceLibrary.DiceRolling.IDiceRoller.RollDice(System.Int32,System.Int32)
  commentId: M:DiceLibrary.DiceRolling.IDiceRoller.RollDice(System.Int32,System.Int32)
  id: RollDice(System.Int32,System.Int32)
  parent: DiceLibrary.DiceRolling.IDiceRoller
  langs:
  - csharp
  - vb
  name: RollDice(int, int)
  nameWithType: IDiceRoller.RollDice(int, int)
  fullName: DiceLibrary.DiceRolling.IDiceRoller.RollDice(int, int)
  type: Method
  source:
    remote:
      path: src/DiceLibrary/DiceRolling/IDiceRoller.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: RollDice
    path: ../src/DiceLibrary/DiceRolling/IDiceRoller.cs
    startLine: 28
  assemblies:
  - DiceLibrary
  namespace: DiceLibrary.DiceRolling
  summary: "\nRolls a specified number of dice with a specified number of sides.\n"
  example: []
  syntax:
    content: int[] RollDice(int rolls, int sides)
    parameters:
    - id: rolls
      type: System.Int32
      description: The number of dice rolls to perform.
    - id: sides
      type: System.Int32
      description: The number of sides on each die.
    return:
      type: System.Int32[]
      description: An array of integers representing the results of each roll.
    content.vb: Function RollDice(rolls As Integer, sides As Integer) As Integer()
  overload: DiceLibrary.DiceRolling.IDiceRoller.RollDice*
  nameWithType.vb: IDiceRoller.RollDice(Integer, Integer)
  fullName.vb: DiceLibrary.DiceRolling.IDiceRoller.RollDice(Integer, Integer)
  name.vb: RollDice(Integer, Integer)
references:
- uid: DiceLibrary.DiceRolling
  commentId: N:DiceLibrary.DiceRolling
  name: DiceLibrary.DiceRolling
  nameWithType: DiceLibrary.DiceRolling
  fullName: DiceLibrary.DiceRolling
  spec.csharp:
  - uid: DiceLibrary
    name: DiceLibrary
  - name: .
  - uid: DiceLibrary.DiceRolling
    name: DiceRolling
  spec.vb:
  - uid: DiceLibrary
    name: DiceLibrary
  - name: .
  - uid: DiceLibrary.DiceRolling
    name: DiceRolling
- uid: DiceLibrary.DiceRolling.IDiceRoller.RollDice*
  commentId: Overload:DiceLibrary.DiceRolling.IDiceRoller.RollDice
  name: RollDice
  nameWithType: IDiceRoller.RollDice
  fullName: DiceLibrary.DiceRolling.IDiceRoller.RollDice
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int32[]
  isExternal: true
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
