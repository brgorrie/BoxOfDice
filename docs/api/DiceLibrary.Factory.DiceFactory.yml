### YamlMime:ManagedReference
items:
- uid: DiceLibrary.Factory.DiceFactory
  commentId: T:DiceLibrary.Factory.DiceFactory
  id: DiceFactory
  parent: DiceLibrary.Factory
  children:
  - DiceLibrary.Factory.DiceFactory.#ctor(System.Int32)
  - DiceLibrary.Factory.DiceFactory.Create
  - DiceLibrary.Factory.DiceFactory.Create(System.Int32)
  langs:
  - csharp
  - vb
  name: DiceFactory
  nameWithType: DiceFactory
  fullName: DiceLibrary.Factory.DiceFactory
  type: Class
  source:
    remote:
      path: src/DiceLibrary/Factory/DiceFactory.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: DiceFactory
    path: ../src/DiceLibrary/Factory/DiceFactory.cs
    startLine: 21
  assemblies:
  - DiceLibrary
  namespace: DiceLibrary.Factory
  summary: "\nRepresents a factory for creating instances of the <xref href=\"DiceLibrary.Model.IDice\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: 'public class DiceFactory : IDiceFactory'
    content.vb: Public Class DiceFactory Implements IDiceFactory
  inheritance:
  - System.Object
  implements:
  - DiceLibrary.Factory.IDiceFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DiceLibrary.Factory.DiceFactory.#ctor(System.Int32)
  commentId: M:DiceLibrary.Factory.DiceFactory.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: DiceLibrary.Factory.DiceFactory
  langs:
  - csharp
  - vb
  name: DiceFactory(int)
  nameWithType: DiceFactory.DiceFactory(int)
  fullName: DiceLibrary.Factory.DiceFactory.DiceFactory(int)
  type: Constructor
  source:
    remote:
      path: src/DiceLibrary/Factory/DiceFactory.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: .ctor
    path: ../src/DiceLibrary/Factory/DiceFactory.cs
    startLine: 33
  assemblies:
  - DiceLibrary
  namespace: DiceLibrary.Factory
  summary: "\nInitializes a new instance of the <xref href=\"DiceLibrary.Factory.DiceFactory\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DiceFactory(int defaultSides = 6)
    parameters:
    - id: defaultSides
      type: System.Int32
      description: The default number of sides for a new dice.
    content.vb: Public Sub New(defaultSides As Integer = 6)
  overload: DiceLibrary.Factory.DiceFactory.#ctor*
  nameWithType.vb: DiceFactory.New(Integer)
  fullName.vb: DiceLibrary.Factory.DiceFactory.New(Integer)
  name.vb: New(Integer)
- uid: DiceLibrary.Factory.DiceFactory.Create(System.Int32)
  commentId: M:DiceLibrary.Factory.DiceFactory.Create(System.Int32)
  id: Create(System.Int32)
  parent: DiceLibrary.Factory.DiceFactory
  langs:
  - csharp
  - vb
  name: Create(int)
  nameWithType: DiceFactory.Create(int)
  fullName: DiceLibrary.Factory.DiceFactory.Create(int)
  type: Method
  source:
    remote:
      path: src/DiceLibrary/Factory/DiceFactory.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: Create
    path: ../src/DiceLibrary/Factory/DiceFactory.cs
    startLine: 43
  assemblies:
  - DiceLibrary
  namespace: DiceLibrary.Factory
  summary: "\nCreates a new instance of the <xref href=\"DiceLibrary.Model.IDice\" data-throw-if-not-resolved=\"false\"></xref> interface with the specified number of sides.\n"
  example: []
  syntax:
    content: public IDice Create(int sides)
    parameters:
    - id: sides
      type: System.Int32
      description: The number of sides for the new dice.
    return:
      type: DiceLibrary.Model.IDice
      description: A new instance of the <xref href="DiceLibrary.Model.IDice" data-throw-if-not-resolved="false"></xref> interface.
    content.vb: Public Function Create(sides As Integer) As IDice
  overload: DiceLibrary.Factory.DiceFactory.Create*
  implements:
  - DiceLibrary.Factory.IDiceFactory.Create(System.Int32)
  nameWithType.vb: DiceFactory.Create(Integer)
  fullName.vb: DiceLibrary.Factory.DiceFactory.Create(Integer)
  name.vb: Create(Integer)
- uid: DiceLibrary.Factory.DiceFactory.Create
  commentId: M:DiceLibrary.Factory.DiceFactory.Create
  id: Create
  parent: DiceLibrary.Factory.DiceFactory
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: DiceFactory.Create()
  fullName: DiceLibrary.Factory.DiceFactory.Create()
  type: Method
  source:
    remote:
      path: src/DiceLibrary/Factory/DiceFactory.cs
      branch: feature/SetupDocFX
      repo: https://github.com/brgorrie/BoxOfDice.git
    id: Create
    path: ../src/DiceLibrary/Factory/DiceFactory.cs
    startLine: 52
  assemblies:
  - DiceLibrary
  namespace: DiceLibrary.Factory
  summary: "\nCreates a new instance of the <xref href=\"DiceLibrary.Model.IDice\" data-throw-if-not-resolved=\"false\"></xref> interface with the default number of sides.\n"
  example: []
  syntax:
    content: public IDice Create()
    return:
      type: DiceLibrary.Model.IDice
      description: A new instance of the <xref href="DiceLibrary.Model.IDice" data-throw-if-not-resolved="false"></xref> interface.
    content.vb: Public Function Create() As IDice
  overload: DiceLibrary.Factory.DiceFactory.Create*
  implements:
  - DiceLibrary.Factory.IDiceFactory.Create
references:
- uid: DiceLibrary.Model.IDice
  commentId: T:DiceLibrary.Model.IDice
  parent: DiceLibrary.Model
  name: IDice
  nameWithType: IDice
  fullName: DiceLibrary.Model.IDice
- uid: DiceLibrary.Factory
  commentId: N:DiceLibrary.Factory
  name: DiceLibrary.Factory
  nameWithType: DiceLibrary.Factory
  fullName: DiceLibrary.Factory
  spec.csharp:
  - uid: DiceLibrary
    name: DiceLibrary
  - name: .
  - uid: DiceLibrary.Factory
    name: Factory
  spec.vb:
  - uid: DiceLibrary
    name: DiceLibrary
  - name: .
  - uid: DiceLibrary.Factory
    name: Factory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: DiceLibrary.Factory.IDiceFactory
  commentId: T:DiceLibrary.Factory.IDiceFactory
  parent: DiceLibrary.Factory
  name: IDiceFactory
  nameWithType: IDiceFactory
  fullName: DiceLibrary.Factory.IDiceFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: DiceLibrary.Model
  commentId: N:DiceLibrary.Model
  name: DiceLibrary.Model
  nameWithType: DiceLibrary.Model
  fullName: DiceLibrary.Model
  spec.csharp:
  - uid: DiceLibrary
    name: DiceLibrary
  - name: .
  - uid: DiceLibrary.Model
    name: Model
  spec.vb:
  - uid: DiceLibrary
    name: DiceLibrary
  - name: .
  - uid: DiceLibrary.Model
    name: Model
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DiceLibrary.Factory.DiceFactory
  commentId: T:DiceLibrary.Factory.DiceFactory
  name: DiceFactory
  nameWithType: DiceFactory
  fullName: DiceLibrary.Factory.DiceFactory
- uid: DiceLibrary.Factory.DiceFactory.#ctor*
  commentId: Overload:DiceLibrary.Factory.DiceFactory.#ctor
  name: DiceFactory
  nameWithType: DiceFactory.DiceFactory
  fullName: DiceLibrary.Factory.DiceFactory.DiceFactory
  nameWithType.vb: DiceFactory.New
  fullName.vb: DiceLibrary.Factory.DiceFactory.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: DiceLibrary.Factory.DiceFactory.Create*
  commentId: Overload:DiceLibrary.Factory.DiceFactory.Create
  name: Create
  nameWithType: DiceFactory.Create
  fullName: DiceLibrary.Factory.DiceFactory.Create
- uid: DiceLibrary.Factory.IDiceFactory.Create(System.Int32)
  commentId: M:DiceLibrary.Factory.IDiceFactory.Create(System.Int32)
  parent: DiceLibrary.Factory.IDiceFactory
  isExternal: true
  name: Create(int)
  nameWithType: IDiceFactory.Create(int)
  fullName: DiceLibrary.Factory.IDiceFactory.Create(int)
  nameWithType.vb: IDiceFactory.Create(Integer)
  fullName.vb: DiceLibrary.Factory.IDiceFactory.Create(Integer)
  name.vb: Create(Integer)
  spec.csharp:
  - uid: DiceLibrary.Factory.IDiceFactory.Create(System.Int32)
    name: Create
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: DiceLibrary.Factory.IDiceFactory.Create(System.Int32)
    name: Create
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: DiceLibrary.Factory.IDiceFactory.Create
  commentId: M:DiceLibrary.Factory.IDiceFactory.Create
  parent: DiceLibrary.Factory.IDiceFactory
  name: Create()
  nameWithType: IDiceFactory.Create()
  fullName: DiceLibrary.Factory.IDiceFactory.Create()
  spec.csharp:
  - uid: DiceLibrary.Factory.IDiceFactory.Create
    name: Create
  - name: (
  - name: )
  spec.vb:
  - uid: DiceLibrary.Factory.IDiceFactory.Create
    name: Create
  - name: (
  - name: )
